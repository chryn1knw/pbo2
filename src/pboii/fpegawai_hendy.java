package pboii;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hensu
 */
public class fpegawai_hendy extends javax.swing.JFrame {

    private DefaultTableModel model;

    /**
     * Creates new form fpegawai_hendy
     */
    public fpegawai_hendy() {
        initComponents();
        // Buat custom DefaultTableModel supaya tidak dapat edit kolom
        model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tabelUser.setModel(model);
        model.addColumn("Username");
        model.addColumn("Password");
        model.addColumn("Jenis Kelamin");
        model.addColumn("Email");
        model.addColumn("No telp");
        model.addColumn("Agama");
        model.addColumn("Alamat");
        loadData();
    }

    public void FilterAngka(KeyEvent a) {
        if (Character.isAlphabetic(a.getKeyChar())) {
            a.consume();
            JOptionPane.showMessageDialog(null, "masukan angka saja!", "peringatan",
                    JOptionPane.WARNING_MESSAGE);
        }
    }

    private void clearFields() {
        txt_username.setText("");
        txt_password.setText("");
        txt_repassword.setText("");
        txt_email.setText("");
        rdbtn_male.setSelected(false);
        rdbtn_female.setSelected(false);
        txt_telp.setText("");
        combo_agama.setSelectedItem("");
        txt_alamat.setText("");
    }

    private final void loadData() {
        try {
            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            Connection con = koneksi.getKoneksi();
            Statement s = con.createStatement();
            String sql = "SELECT * FROM tbl_login";
            ResultSet r = s.executeQuery(sql);

            while (r.next()) {
                Object[] o = new Object[7];
                o[0] = r.getString("username");
                o[1] = r.getString("password");
                o[2] = r.getString("jenis_kelamin");
                o[3] = r.getString("email");
                o[4] = r.getString("no_telp");
                o[5] = r.getString("agama");
                o[6] = r.getString("alamat");

                model.addRow(o);
            }
            r.close();
            s.close();
        } catch (SQLException e) {
            System.out.println("Terjadi Error loadData()");
        } finally {
            btn_tambah.setEnabled(true);
            btn_hapus.setEnabled(false);
            btn_ubah.setEnabled(false);
            clearFields();
        }
    }

    private boolean isUsernameOrEmailExists(String username, String email) {
        try {
            Connection c = koneksi.getKoneksi();
            String sql = "SELECT COUNT(*) FROM tbl_login WHERE username = ? OR email = ?";
            PreparedStatement statement = c.prepareStatement(sql);
            statement.setString(1, username);
            statement.setString(2, email);
            ResultSet rs = statement.executeQuery();
            if (rs.next()) {
                return rs.getInt(1) > 0; // Jika ada catatan yang ditemukan, kembalikan true
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_title = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btn_back = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelUser = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        lbl_alamat = new javax.swing.JLabel();
        lbl_username = new javax.swing.JLabel();
        lbl_password = new javax.swing.JLabel();
        lbl_repassword = new javax.swing.JLabel();
        lbl_gender = new javax.swing.JLabel();
        lbl_email = new javax.swing.JLabel();
        lbl_telp = new javax.swing.JLabel();
        lbl_agama = new javax.swing.JLabel();
        txt_email = new javax.swing.JTextField();
        txt_username = new javax.swing.JTextField();
        txt_telp = new javax.swing.JTextField();
        rdbtn_female = new javax.swing.JRadioButton();
        rdbtn_male = new javax.swing.JRadioButton();
        txt_repassword = new javax.swing.JPasswordField();
        txt_password = new javax.swing.JPasswordField();
        btn_ubah = new javax.swing.JButton();
        btn_tambah = new javax.swing.JButton();
        btn_hapus = new javax.swing.JButton();
        combo_agama = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_alamat = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Form Pegawai");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_title.setBackground(new java.awt.Color(255, 255, 255));
        lbl_title.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbl_title.setForeground(new java.awt.Color(255, 255, 255));
        lbl_title.setText("Pengolahan Data Pegawai");
        getContentPane().add(lbl_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 204, 51));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_back.setBackground(new java.awt.Color(255, 255, 255));
        btn_back.setText("Back");
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });
        jPanel1.add(btn_back, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 20, 60, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 60));

        tabelUser.setAutoCreateRowSorter(true);
        tabelUser.setBackground(new java.awt.Color(255, 255, 204));
        tabelUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelUserMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tabelUserMouseExited(evt);
            }
        });
        jScrollPane1.setViewportView(tabelUser);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, 740, 160));

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_alamat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_alamat.setText("Alamat");
        jPanel2.add(lbl_alamat, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 120, -1, -1));

        lbl_username.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_username.setText("Username");
        jPanel2.add(lbl_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, -1, -1));

        lbl_password.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_password.setText("Password");
        jPanel2.add(lbl_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, -1, -1));

        lbl_repassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_repassword.setText("Retype");
        jPanel2.add(lbl_repassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, -1, -1));

        lbl_gender.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_gender.setText("Jenis Kelamin");
        jPanel2.add(lbl_gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        lbl_email.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_email.setText("Email");
        jPanel2.add(lbl_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, -1, -1));

        lbl_telp.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_telp.setText("No. Telp");
        jPanel2.add(lbl_telp, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, -1, -1));

        lbl_agama.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_agama.setText("Agama");
        jPanel2.add(lbl_agama, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 80, -1, -1));

        txt_email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_emailActionPerformed(evt);
            }
        });
        jPanel2.add(txt_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 200, 190, 30));

        txt_username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_usernameActionPerformed(evt);
            }
        });
        jPanel2.add(txt_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, 190, 30));

        txt_telp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_telpActionPerformed(evt);
            }
        });
        txt_telp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_telpKeyTyped(evt);
            }
        });
        jPanel2.add(txt_telp, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 40, 190, 30));

        rdbtn_female.setText("Female");
        jPanel2.add(rdbtn_female, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, 70, 30));

        rdbtn_male.setText("Male");
        jPanel2.add(rdbtn_male, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 160, 50, 30));
        jPanel2.add(txt_repassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 190, 30));
        jPanel2.add(txt_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, 190, 30));

        btn_ubah.setBackground(new java.awt.Color(255, 255, 255));
        btn_ubah.setText("Ubah");
        btn_ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ubahActionPerformed(evt);
            }
        });
        jPanel2.add(btn_ubah, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 260, 120, 40));

        btn_tambah.setBackground(new java.awt.Color(255, 255, 255));
        btn_tambah.setText("Tambah");
        btn_tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tambahActionPerformed(evt);
            }
        });
        jPanel2.add(btn_tambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 260, 120, 40));

        btn_hapus.setBackground(new java.awt.Color(255, 255, 255));
        btn_hapus.setText("Hapus");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });
        jPanel2.add(btn_hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 260, 120, 40));

        combo_agama.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Islam", "Kristen", "Buddha" }));
        jPanel2.add(combo_agama, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 80, 190, 30));

        txt_alamat.setColumns(20);
        txt_alamat.setLineWrap(true);
        txt_alamat.setRows(5);
        txt_alamat.setAutoscrolls(false);
        jScrollPane2.setViewportView(txt_alamat);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 120, 190, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 740, 320));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ubahActionPerformed
        // TODO add your handling code here:
        if (txt_username.getText().isEmpty() || txt_password.getText().isEmpty()
                || txt_email.getText().isEmpty() || txt_telp.getText().isEmpty()
                || txt_alamat.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Harap isi semua bidang yang diperlukan!", "Missing Data", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            // Get user data from edit fields
            String username = txt_username.getText();
            String password = new String(txt_password.getPassword());
            String email = txt_email.getText();
            String phone = txt_telp.getText();
            String religion = (String) combo_agama.getSelectedItem();
            String address = txt_alamat.getText();

            // Determine gender (based on radio button selection)
            String gender;
            if (rdbtn_male.isSelected() && rdbtn_female.isSelected()) {
                JOptionPane.showMessageDialog(null, "Pilih hanya satu jenis kelamin.", "Invalid Selection", JOptionPane.WARNING_MESSAGE);
                return;
            } else if (rdbtn_male.isSelected()) {
                gender = "Male";
            } else if (rdbtn_female.isSelected()) {
                gender = "Female";
            } else {
                gender = "";
                JOptionPane.showMessageDialog(null, "Pilih jenis kelamin.", "Missing Selection", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Validate password confirmation (if applicable)
            if (!txt_repassword.getText().isEmpty()) {
                if (!password.equals(new String(txt_repassword.getPassword()))) {
                    JOptionPane.showMessageDialog(null, "Kata sandi tidak cocok!", "Invalid Password", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            try {
                Connection c = koneksi.getKoneksi();
                String sql = "UPDATE tbl_login SET password = ?, jenis_kelamin = ?, email = ?, no_telp = ?, agama = ?, alamat = ? WHERE username = ?";
                PreparedStatement statement = c.prepareStatement(sql);
                statement.setString(1, password);
                statement.setString(2, gender);
                statement.setString(3, email);
                statement.setString(4, phone);
                statement.setString(5, religion);
                statement.setString(6, address);
                statement.setString(7, username);
                statement.executeUpdate();
                statement.close();
                JOptionPane.showMessageDialog(null, "Data berhasil diubah", "Success", JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException e) {
                System.out.println("Terjadi Error btnUbah");
            } finally {
                loadData();
            }
        }
    }//GEN-LAST:event_btn_ubahActionPerformed

    private void txt_emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_emailActionPerformed

    private void txt_usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_usernameActionPerformed

    private void txt_telpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_telpActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txt_telpActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        // TODO add your handling code here:
        fmenu_hendy fb = new fmenu_hendy();
        fb.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btn_backActionPerformed

    private void btn_tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tambahActionPerformed
        // TODO add your handling code here:
        if (txt_username.getText().isEmpty() || txt_password.getText().isEmpty()
                || txt_email.getText().isEmpty() || txt_telp.getText().isEmpty()
                || txt_alamat.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Harap isi semua bidang yang diperlukan!", "Missing Data", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            String usernamee = txt_username.getText();
            String passwordd = new String(txt_password.getPassword());
            String emaill = txt_email.getText();
            String telpp = txt_telp.getText();
            String alamatt = txt_alamat.getText();
            String agamaa = (String) combo_agama.getSelectedItem();

            // Determine gender (based on radio button selection)
            String genderr;
            if (rdbtn_male.isSelected() && rdbtn_female.isSelected()) {
                // Handle the case where both radio buttons are selected
                JOptionPane.showMessageDialog(null, "Pilih hanya satu jenis kelamin.", "Invalid Selection", JOptionPane.WARNING_MESSAGE);
                return;  // Exit the method if both genders are selected
            } else if (rdbtn_male.isSelected()) {
                genderr = "Male";
            } else if (rdbtn_female.isSelected()) {
                genderr = "Female";
            } else {
                // Handle the case where neither radio button is selected
                genderr = "";
                JOptionPane.showMessageDialog(null, "Pilih jenis kelamin.", "Missing Selection", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Validate password confirmation 
            if (!txt_repassword.getText().isEmpty()) {  // Check if retype password field is used
                if (!passwordd.equals(new String(txt_repassword.getPassword()))) {
                    JOptionPane.showMessageDialog(null, "Kata sandi tidak cocok!", "Invalid Password", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }

            // Check if username or email already exists
            if (isUsernameOrEmailExists(usernamee, emaill)) {
                JOptionPane.showMessageDialog(null, "Username atau Email sudah terdaftar!", "Duplicate Data", JOptionPane.ERROR_MESSAGE);
                return;
            }

            try {
                Connection c = koneksi.getKoneksi();
                String sql = "INSERT INTO tbl_login (username, password, jenis_kelamin, email, no_telp, agama, alamat) VALUES (?, ?, ?, ?, ?, ?, ?)";
                PreparedStatement statement = c.prepareStatement(sql);
                statement.setString(1, usernamee);
                statement.setString(2, passwordd);
                statement.setString(3, genderr);
                statement.setString(4, emaill);
                statement.setString(5, telpp);
                statement.setString(6, agamaa);
                statement.setString(7, alamatt);
                statement.executeUpdate();
                statement.close();
            } catch (SQLException e) {
                e.printStackTrace();
            } finally {
                clearFields();
                JOptionPane.showMessageDialog(null, "Data berhasil ditambah!", "Success", JOptionPane.INFORMATION_MESSAGE);
                loadData();
            }
        }
    }//GEN-LAST:event_btn_tambahActionPerformed

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
        // TODO add your handling code here:
        int selectedRow = tabelUser.getSelectedRow();

        if (selectedRow >= 0) {
            int confirmation = JOptionPane.showConfirmDialog(this,
                    "Apakah Anda yakin ingin menghapus pengguna yang dipilih?",
                    "Konfirmasi", JOptionPane.YES_NO_OPTION);

            if (confirmation == JOptionPane.YES_OPTION) {
                String username = (String) model.getValueAt(selectedRow, 0);

                try ( Connection connection = koneksi.getKoneksi();  PreparedStatement statement = connection.prepareStatement("DELETE FROM tbl_login WHERE username = ?")) {
                    statement.setString(1, username);
                    int rowsAffected = statement.executeUpdate();

                    if (rowsAffected > 0) {
                        model.removeRow(selectedRow);
                        JOptionPane.showMessageDialog(this, "Pengguna berhasil dihapus!");
                        loadData();
                    } else {
                        JOptionPane.showMessageDialog(this, "Kesalahan menghapus pengguna. Silakan coba lagi.");
                    }
                } catch (SQLException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Terjadi kesalahan databse selama penghapusan!");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Pilih pengguna yang akan dihapus.");
        }
    }//GEN-LAST:event_btn_hapusActionPerformed

    private void tabelUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelUserMouseClicked
        btn_tambah.setEnabled(false);
        btn_ubah.setEnabled(true);
        btn_hapus.setEnabled(true);

        int baris = tabelUser.getSelectedRow();
        // Validasi baris yang dipilih
        if (baris == -1) {
            return;
        }

        // Mengekstrak data dari baris yang dipilih
        String username = (String) model.getValueAt(baris, 0);
        String password = (String) model.getValueAt(baris, 1);
        String gender = (String) model.getValueAt(baris, 2);
        String email = (String) model.getValueAt(baris, 3);
        String telp = (String) model.getValueAt(baris, 4);
        String agama = (String) model.getValueAt(baris, 5);
        String alamat = (String) model.getValueAt(baris, 6);

        // set data
        txt_username.setText(username);
        txt_password.setText(password);
        txt_repassword.setText(password);
        txt_email.setText(email);
        txt_telp.setText(telp);
        txt_alamat.setText(alamat);
        combo_agama.setSelectedItem(agama);

        // Set radio button selection based on gender
        if (gender.equals("Male")) {
            rdbtn_male.setSelected(true);
            rdbtn_female.setSelected(false);
        } else if (gender.equals("Female")) {
            rdbtn_male.setSelected(false);
            rdbtn_female.setSelected(true);
        } else {
            // Handle case where gender is empty
            rdbtn_male.setSelected(false);
            rdbtn_female.setSelected(false);
        }
    }//GEN-LAST:event_tabelUserMouseClicked

    private void tabelUserMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelUserMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelUserMouseExited

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jPanel2MouseClicked

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
        loadData();
    }//GEN-LAST:event_jPanel1MouseClicked

    private void txt_telpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_telpKeyTyped
        // TODO add your handling code here:
        FilterAngka(evt);
    }//GEN-LAST:event_txt_telpKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fpegawai_hendy.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fpegawai_hendy.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fpegawai_hendy.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fpegawai_hendy.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fpegawai_hendy().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_tambah;
    private javax.swing.JButton btn_ubah;
    private javax.swing.JComboBox<String> combo_agama;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_agama;
    private javax.swing.JLabel lbl_alamat;
    private javax.swing.JLabel lbl_email;
    private javax.swing.JLabel lbl_gender;
    private javax.swing.JLabel lbl_password;
    private javax.swing.JLabel lbl_repassword;
    private javax.swing.JLabel lbl_telp;
    private javax.swing.JLabel lbl_title;
    private javax.swing.JLabel lbl_username;
    private javax.swing.JRadioButton rdbtn_female;
    private javax.swing.JRadioButton rdbtn_male;
    private javax.swing.JTable tabelUser;
    private javax.swing.JTextArea txt_alamat;
    private javax.swing.JTextField txt_email;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JPasswordField txt_repassword;
    private javax.swing.JTextField txt_telp;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables
}
